// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: service.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// #################################
//          Shared Messages
// #################################
type ByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ByIDRequest) Reset() {
	*x = ByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByIDRequest) ProtoMessage() {}

func (x *ByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByIDRequest.ProtoReflect.Descriptor instead.
func (*ByIDRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *ByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LoadKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *LoadKeyRequest) Reset() {
	*x = LoadKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadKeyRequest) ProtoMessage() {}

func (x *LoadKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadKeyRequest.ProtoReflect.Descriptor instead.
func (*LoadKeyRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *LoadKeyRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

// #################################
//          Callhandling
// #################################
type CallhandlingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CallhandlingResponse) Reset() {
	*x = CallhandlingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallhandlingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallhandlingResponse) ProtoMessage() {}

func (x *CallhandlingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallhandlingResponse.ProtoReflect.Descriptor instead.
func (*CallhandlingResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *CallhandlingResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CallhandlingResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateCallhandlingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateCallhandlingRequest) Reset() {
	*x = CreateCallhandlingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCallhandlingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCallhandlingRequest) ProtoMessage() {}

func (x *CreateCallhandlingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCallhandlingRequest.ProtoReflect.Descriptor instead.
func (*CreateCallhandlingRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCallhandlingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateCallhandlingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateCallhandlingRequest) Reset() {
	*x = UpdateCallhandlingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCallhandlingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCallhandlingRequest) ProtoMessage() {}

func (x *UpdateCallhandlingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCallhandlingRequest.ProtoReflect.Descriptor instead.
func (*UpdateCallhandlingRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCallhandlingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCallhandlingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0x21, 0x0a,
	0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x22, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x1d, 0x0a, 0x0b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x0e, 0x4c, 0x6f, 0x61, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x3a, 0x0a, 0x14, 0x43, 0x61, 0x6c,
	0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xc9, 0x03, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x6c,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x63, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x2e, 0x63, 0x61, 0x6c, 0x6c,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x19,
	0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x61, 0x6c, 0x6c,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x63, 0x61, 0x6c, 0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_service_proto_goTypes = []interface{}{
	(*PingRequest)(nil),               // 0: callhandling.PingRequest
	(*PingResponse)(nil),              // 1: callhandling.PingResponse
	(*ByIDRequest)(nil),               // 2: callhandling.ByIDRequest
	(*LoadKeyRequest)(nil),            // 3: callhandling.LoadKeyRequest
	(*CallhandlingResponse)(nil),      // 4: callhandling.CallhandlingResponse
	(*CreateCallhandlingRequest)(nil), // 5: callhandling.CreateCallhandlingRequest
	(*UpdateCallhandlingRequest)(nil), // 6: callhandling.UpdateCallhandlingRequest
}
var file_service_proto_depIdxs = []int32{
	0, // 0: callhandling.CallHandlingService.Ping:input_type -> callhandling.PingRequest
	5, // 1: callhandling.CallHandlingService.CreateCallhandling:input_type -> callhandling.CreateCallhandlingRequest
	6, // 2: callhandling.CallHandlingService.UpdateCallhandling:input_type -> callhandling.UpdateCallhandlingRequest
	2, // 3: callhandling.CallHandlingService.DeleteCallhandling:input_type -> callhandling.ByIDRequest
	2, // 4: callhandling.CallHandlingService.GetCallhandling:input_type -> callhandling.ByIDRequest
	1, // 5: callhandling.CallHandlingService.Ping:output_type -> callhandling.PingResponse
	4, // 6: callhandling.CallHandlingService.CreateCallhandling:output_type -> callhandling.CallhandlingResponse
	4, // 7: callhandling.CallHandlingService.UpdateCallhandling:output_type -> callhandling.CallhandlingResponse
	4, // 8: callhandling.CallHandlingService.DeleteCallhandling:output_type -> callhandling.CallhandlingResponse
	4, // 9: callhandling.CallHandlingService.GetCallhandling:output_type -> callhandling.CallhandlingResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallhandlingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCallhandlingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCallhandlingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CallHandlingServiceClient is the client API for CallHandlingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CallHandlingServiceClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	CreateCallhandling(ctx context.Context, in *CreateCallhandlingRequest, opts ...grpc.CallOption) (*CallhandlingResponse, error)
	UpdateCallhandling(ctx context.Context, in *UpdateCallhandlingRequest, opts ...grpc.CallOption) (*CallhandlingResponse, error)
	DeleteCallhandling(ctx context.Context, in *ByIDRequest, opts ...grpc.CallOption) (*CallhandlingResponse, error)
	GetCallhandling(ctx context.Context, in *ByIDRequest, opts ...grpc.CallOption) (*CallhandlingResponse, error)
}

type callHandlingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCallHandlingServiceClient(cc grpc.ClientConnInterface) CallHandlingServiceClient {
	return &callHandlingServiceClient{cc}
}

func (c *callHandlingServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/callhandling.CallHandlingService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *callHandlingServiceClient) CreateCallhandling(ctx context.Context, in *CreateCallhandlingRequest, opts ...grpc.CallOption) (*CallhandlingResponse, error) {
	out := new(CallhandlingResponse)
	err := c.cc.Invoke(ctx, "/callhandling.CallHandlingService/CreateCallhandling", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *callHandlingServiceClient) UpdateCallhandling(ctx context.Context, in *UpdateCallhandlingRequest, opts ...grpc.CallOption) (*CallhandlingResponse, error) {
	out := new(CallhandlingResponse)
	err := c.cc.Invoke(ctx, "/callhandling.CallHandlingService/UpdateCallhandling", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *callHandlingServiceClient) DeleteCallhandling(ctx context.Context, in *ByIDRequest, opts ...grpc.CallOption) (*CallhandlingResponse, error) {
	out := new(CallhandlingResponse)
	err := c.cc.Invoke(ctx, "/callhandling.CallHandlingService/DeleteCallhandling", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *callHandlingServiceClient) GetCallhandling(ctx context.Context, in *ByIDRequest, opts ...grpc.CallOption) (*CallhandlingResponse, error) {
	out := new(CallhandlingResponse)
	err := c.cc.Invoke(ctx, "/callhandling.CallHandlingService/GetCallhandling", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CallHandlingServiceServer is the server API for CallHandlingService service.
type CallHandlingServiceServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	CreateCallhandling(context.Context, *CreateCallhandlingRequest) (*CallhandlingResponse, error)
	UpdateCallhandling(context.Context, *UpdateCallhandlingRequest) (*CallhandlingResponse, error)
	DeleteCallhandling(context.Context, *ByIDRequest) (*CallhandlingResponse, error)
	GetCallhandling(context.Context, *ByIDRequest) (*CallhandlingResponse, error)
}

// UnimplementedCallHandlingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCallHandlingServiceServer struct {
}

func (*UnimplementedCallHandlingServiceServer) Ping(context.Context, *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedCallHandlingServiceServer) CreateCallhandling(context.Context, *CreateCallhandlingRequest) (*CallhandlingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCallhandling not implemented")
}
func (*UnimplementedCallHandlingServiceServer) UpdateCallhandling(context.Context, *UpdateCallhandlingRequest) (*CallhandlingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCallhandling not implemented")
}
func (*UnimplementedCallHandlingServiceServer) DeleteCallhandling(context.Context, *ByIDRequest) (*CallhandlingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCallhandling not implemented")
}
func (*UnimplementedCallHandlingServiceServer) GetCallhandling(context.Context, *ByIDRequest) (*CallhandlingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCallhandling not implemented")
}

func RegisterCallHandlingServiceServer(s *grpc.Server, srv CallHandlingServiceServer) {
	s.RegisterService(&_CallHandlingService_serviceDesc, srv)
}

func _CallHandlingService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CallHandlingServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/callhandling.CallHandlingService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CallHandlingServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CallHandlingService_CreateCallhandling_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCallhandlingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CallHandlingServiceServer).CreateCallhandling(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/callhandling.CallHandlingService/CreateCallhandling",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CallHandlingServiceServer).CreateCallhandling(ctx, req.(*CreateCallhandlingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CallHandlingService_UpdateCallhandling_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCallhandlingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CallHandlingServiceServer).UpdateCallhandling(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/callhandling.CallHandlingService/UpdateCallhandling",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CallHandlingServiceServer).UpdateCallhandling(ctx, req.(*UpdateCallhandlingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CallHandlingService_DeleteCallhandling_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CallHandlingServiceServer).DeleteCallhandling(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/callhandling.CallHandlingService/DeleteCallhandling",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CallHandlingServiceServer).DeleteCallhandling(ctx, req.(*ByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CallHandlingService_GetCallhandling_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CallHandlingServiceServer).GetCallhandling(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/callhandling.CallHandlingService/GetCallhandling",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CallHandlingServiceServer).GetCallhandling(ctx, req.(*ByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CallHandlingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "callhandling.CallHandlingService",
	HandlerType: (*CallHandlingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _CallHandlingService_Ping_Handler,
		},
		{
			MethodName: "CreateCallhandling",
			Handler:    _CallHandlingService_CreateCallhandling_Handler,
		},
		{
			MethodName: "UpdateCallhandling",
			Handler:    _CallHandlingService_UpdateCallhandling_Handler,
		},
		{
			MethodName: "DeleteCallhandling",
			Handler:    _CallHandlingService_DeleteCallhandling_Handler,
		},
		{
			MethodName: "GetCallhandling",
			Handler:    _CallHandlingService_GetCallhandling_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
